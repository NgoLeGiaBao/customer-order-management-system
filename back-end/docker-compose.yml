version: '3.4'

services:
  authentication-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    networks:
      - backend-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DefaultConnection=Server=localhost\\SQLEXPRESS;Database=db_mt_soa_authentication_service;Trusted_Connection=True;Encrypt=False

  welcome-service:
    build:
      context: ./services/welcome-service
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    networks:
      - backend-network
    environment:
      - DefaultConnection=Server=localhost\\SQLEXPRESS;Database=db_mt_soa_welcome_service;Trusted_Connection=True;Encrypt=False

  ordering-service:
    build:
      context: ./services/ordering-service
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    networks:
      - backend-network
    environment:
      - DefaultConnection=Server=localhost\\SQLEXPRESS;Database=db_mt_soa_ordering_service;Trusted_Connection=True;Encrypt=False

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "5003:80"
    networks:
      - backend-network
    environment:
      - DefaultConnection=Server=localhost\\SQLEXPRESS;Database=db_mt_soa_payment_service;Trusted_Connection=True;Encrypt=False

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend-network

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword
    ports:
      - "1433:1433"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
